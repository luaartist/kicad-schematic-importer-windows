# This workflow will create the development docker images

name: Create `dev` images

on:
  workflow_dispatch

jobs:
  push_to_registry:
    strategy:
      matrix:
        ki_release: [dev_image_k5, dev_image_k6, dev_image_k7, dev_image_k8, dev_image_k5f, dev_image_k6f, dev_image_k7f, dev_image_k8f]

    name: Docker ${{ matrix.ki_release }}
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    # Don't create `dev` images using the `master`
    if: github.ref == 'refs/heads/dev'

    steps:
    - name: Check out the repo
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      run: |
        cd tools/${{ matrix.ki_release }}
        ./build.sh

  clean_images:
    name: Triggers the kicad_auto and kicad_auto_test clean
    runs-on: ubuntu-latest
    needs: push_to_registry
    if: github.ref == 'refs/heads/dev'
    steps:
    - name: Trigger garbage collector
      run: |
        curl -X POST -u "${{secrets.PAT_USERNAME}}:${{secrets.PAT_TOKEN}}" -H "Accept: application/vnd.github.v3+json" -H "Content-Type: application/json" https://api.github.com/repos/INTI-CMNB/kicad_auto/dispatches --data '{"event_type": "clean"}'
        curl -X POST -u "${{secrets.PAT_USERNAME}}:${{secrets.PAT_TOKEN}}" -H "Accept: application/vnd.github.v3+json" -H "Content-Type: application/json" https://api.github.com/repos/INTI-CMNB/kicad_auto_test/dispatches --data '{"event_type": "clean"}'
