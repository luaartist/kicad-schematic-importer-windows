.. Automatically generated by KiBot, please don't edit this file

.. index::
   pair: BoM (Bill of Materials); bom

BoM (Bill of Materials)
~~~~~~~~~~~~~~~~~~~~~~~

Used to generate the BoM in CSV, HTML, TSV, TXT, XML or XLSX format using the internal BoM.
This output can generate XYRS files (pick and place files). |br|
Is compatible with KiBoM, but doesn't need to update the XML netlist because the components
are loaded from the schematic. |br|
Important differences with KiBoM output:

- All options are in the main `options` section, not in `conf` subsection.
- The `Component` column is named `Row` and works just like any other column.

This output is what you get from the 'Tools/Generate Bill of Materials' menu in eeschema. |br|

Type: ``bom``

Category: **Schematic/BoM**

Parameters:

-  **comment** :index:`: <pair: output - bom; comment>` [:ref:`string <string>`] (default: ``''``) A comment for documentation purposes. It helps to identify the output.
-  **dir** :index:`: <pair: output - bom; dir>` [:ref:`string <string>`] (default: ``'./'``) Output directory for the generated files.
   If it starts with `+` the rest is concatenated to the default dir.
-  **name** :index:`: <pair: output - bom; name>` [:ref:`string <string>`] (default: ``''``) Used to identify this particular output definition.
   Avoid using `_` as first character. These names are reserved for KiBot.
-  **options** :index:`: <pair: output - bom; options>`  [:ref:`BoMOptions parameters <BoMOptions>`] [:ref:`dict <dict>`] (default: empty dict, default values used) Options for the `bom` output.
-  **type** :index:`: <pair: output - bom; type>` 'bom'
-  ``category`` :index:`: <pair: output - bom; category>` [:ref:`string <string>` | :ref:`list(string) <list(string)>`] (default: ``''``) [:ref:`comma separated <comma_sep>`] The category for this output. If not specified an internally defined
   category is used.
   Categories looks like file system paths, i.e. **PCB/fabrication/gerber**.
   The categories are currently used for `navigate_results`.

-  ``disable_run_by_default`` :index:`: <pair: output - bom; disable_run_by_default>` [:ref:`string <string>` | :ref:`boolean <boolean>`] (default: ``''``) Use it to disable the `run_by_default` status of other output.
   Useful when this output extends another and you don't want to generate the original.
   Use the boolean true value to disable the output you are extending.
-  ``extends`` :index:`: <pair: output - bom; extends>` [:ref:`string <string>`] (default: ``''``) Copy the `options` section from the indicated output.
   Used to inherit options from another output of the same type.
-  ``groups`` :index:`: <pair: output - bom; groups>` [:ref:`string <string>` | :ref:`list(string) <list(string)>`] (default: ``''``) One or more groups to add this output. In order to catch typos
   we recommend to add outputs only to existing groups. You can create an empty group if
   needed.

-  ``output_id`` :index:`: <pair: output - bom; output_id>` [:ref:`string <string>`] (default: ``''``) Text to use for the %I expansion content. To differentiate variations of this output.
-  ``priority`` :index:`: <pair: output - bom; priority>` [:ref:`number <number>`] (default: ``50``) (range: 0 to 100) Priority for this output. High priority outputs are created first.
   Internally we use 10 for low priority, 90 for high priority and 50 for most outputs.
-  ``run_by_default`` :index:`: <pair: output - bom; run_by_default>` [:ref:`boolean <boolean>`] (default: ``true``) When enabled this output will be created when no specific outputs are requested.

.. toctree::
   :caption: Used dicts

   BoMOptions
